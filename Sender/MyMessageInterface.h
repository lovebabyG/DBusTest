/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp MyMessage.xml -p MyMessageInterface
 *
 * qdbusxml2cpp is Copyright (C) 2013 Digia Plc and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef MYMESSAGEINTERFACE_H_1455487779
#define MYMESSAGEINTERFACE_H_1455487779

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>
#include "../Message/message.h"

/*
 * Proxy class for interface Demo.MyMessage
 */
class DemoMyMessageInterface: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "Demo.MyMessage"; }

public:
    DemoMyMessageInterface(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = 0);

    ~DemoMyMessageInterface();

public Q_SLOTS: // METHODS
    inline QDBusPendingReply<> sendMessage(Message message)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(message);
        return asyncCallWithArgumentList(QLatin1String("sendMessage"), argumentList);
    }

    inline QDBusPendingReply<> sendMessage2(messageList message)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(message);
        return asyncCallWithArgumentList(QLatin1String("sendMessage2"), argumentList);
    }

    inline QDBusPendingReply<> sendSignal(const QString &signal)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(signal);
        return asyncCallWithArgumentList(QLatin1String("sendSignal"), argumentList);
    }

    inline QDBusPendingReply<> sendSignal2(const QList<int> &signal2)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(signal2);
        return asyncCallWithArgumentList(QLatin1String("sendSignal2"), argumentList);
    }

Q_SIGNALS: // SIGNALS
};

namespace Demo {
  typedef ::DemoMyMessageInterface MyMessage;
}
#endif
